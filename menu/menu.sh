#!/bin/bash
while true; do
  clear
  echo "--------- CTTN VPS MENU ----------"
  echo "1) T·∫°o Website"
  echo "2) T·∫°o Database"
  echo "3) Qu·∫£n l√Ω Firewall"
  echo "4) C·∫≠p nh·∫≠t h·ªá th·ªëng"
  echo "5) G·ª° C√†i ƒê·∫∑t CTTN VPS Script"
  echo "0) Tho√°t"
  echo "----------------------------------"
  read -p "Ch·ªçn m·ªôt t√πy ch·ªçn: " choice
  case $choice in
    1)
      read -p "Nh·∫≠p domain (v√≠ d·ª•: mysite.local): " domain
      mkdir -p /var/www/$domain/public_html
      chown -R $USER:$USER /var/www/$domain/public_html
      chmod -R 755 /var/www

      # T·∫°o file index.html m·∫´u
      echo "<h1>Website $domain ƒë√£ ƒë∆∞·ª£c t·∫°o!</h1>" > /var/www/$domain/public_html/index.html

      # T·∫°o virtual host NGINX
      if [ -d /etc/nginx/sites-available ]; then
        cat > /etc/nginx/sites-available/$domain <<EOF
server {
    listen 80;
    server_name $domain;
    root /var/www/$domain/public_html;
    index index.html index.php;
    location / {
        try_files \$uri \$uri/ =404;
    }
}
EOF
        ln -s /etc/nginx/sites-available/$domain /etc/nginx/sites-enabled/
        nginx -t && systemctl reload nginx
        echo "‚úÖ Website $domain ƒë√£ t·∫°o xong (NGINX)."
      else
        echo "‚ùå Kh√¥ng t√¨m th·∫•y c·∫•u h√¨nh NGINX. B·ªè qua c·∫•u h√¨nh vhost."
      fi

      read -p "Nh·∫•n Enter ƒë·ªÉ quay l·∫°i menu"
      ;;
    2)
          2)
      read -p "T√™n database: " dbname
      read -p "T√™n user: " dbuser
      read -s -p "M·∫≠t kh·∫©u cho user: " dbpass
      echo ""

      if command -v mysql >/dev/null 2>&1; then
        mysql -e "CREATE DATABASE $dbname;"
        mysql -e "CREATE USER '$dbuser'@'localhost' IDENTIFIED BY '$dbpass';"
        mysql -e "GRANT ALL PRIVILEGES ON $dbname.* TO '$dbuser'@'localhost';"
        mysql -e "FLUSH PRIVILEGES;"
        echo "‚úÖ ƒê√£ t·∫°o database v√† user th√†nh c√¥ng!"
      else
        echo "‚ùå MySQL ch∆∞a ƒë∆∞·ª£c c√†i ho·∫∑c kh√¥ng kh·∫£ d·ª•ng."
      fi

      read -p "Nh·∫•n Enter ƒë·ªÉ quay l·∫°i menu"
      ;;

      ;;
    3)
      echo "Qu·∫£n l√Ω firewall..."
      sudo ufw status || firewall-cmd --state
      read -p "(Enter ƒë·ªÉ ti·∫øp t·ª•c)"
      ;;
    4)
      echo "ƒêang c·∫≠p nh·∫≠t h·ªá th·ªëng..."
      if [ -f /etc/debian_version ]; then
        apt update && apt -y upgrade
      else
        dnf -y update || yum -y update
      fi
      read -p "(Enter ƒë·ªÉ quay l·∫°i menu)"
      ;;
    5)
      read -p "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën G·ª† C√ÄI ƒê·∫∂T CTTN VPS? (y/N): " confirm
      if [[ "$confirm" =~ ^[Yy]$ ]]; then
        echo "üîÅÔøΩÔøΩÔøΩ ƒêang g·ª° c√†i ƒë·∫∑t..."
        rm -rf /opt/cttnvps
        rm -f /usr/local/bin/cttnvps
        echo "‚úÖ ƒê√£ g·ª° th√†nh c√¥ng CTTN VPS Script."

        read -p "B·∫°n c√≥ mu·ªën g·ª° c√°c g√≥i li√™n quan (nguy hi·ªÉm)? (y/N): " remove_pkgs
        if [[ "$remove_pkgs" =~ ^[Yy]$ ]]; then
          if command -v apt >/dev/null 2>&1; then
            apt remove --purge -y nginx php mysql-server mariadb-server ufw
          elif command -v dnf >/dev/null 2>&1; then
            dnf remove -y nginx php mariadb-server firewalld
          elif command -v yum >/dev/null 2>&1; then
            yum remove -y nginx php mariadb-server firewalld
          fi
          echo "‚úÖ ƒê√£ g·ª° c√°c g√≥i c√†i ƒë·∫∑t c∆° b·∫£n."
        fi

        echo "H·ªá th·ªëng ƒë√£ ƒë∆∞·ª£c l√†m s·∫°ch."
        read -p "Nh·∫•n Enter ƒë·ªÉ tho√°t..."
        exit 0
      else
        echo "‚ùé H·ªßy g·ª° c√†i ƒë·∫∑t."
        sleep 2
      fi
      ;;
    0)
      echo "T·∫°m bi·ªát!"
      exit 0
      ;;
    *)
      echo "L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá."
      sleep 1
      ;;
  esac
done
